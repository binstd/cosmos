{"version":3,"sources":["webpack:///path---redirect-to-codepen-update-on-async-rendering-react-dom-properties-before-update-before-bcafb24f0555a378b2a6.js","webpack:///./.cache/json/redirect-to-codepen-update-on-async-rendering-react-dom-properties-before-update-before.json"],"names":["webpackJsonp","988","module","exports","pathContext","action","payload"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,OAAA,gCAAAC,QAAA","file":"path---redirect-to-codepen-update-on-async-rendering-react-dom-properties-before-update-before-bcafb24f0555a378b2a6.js","sourcesContent":["webpackJsonp([129902151644389],{\n\n/***/ 988:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"action\":\"https://codepen.io/pen/define\",\"payload\":\"{\\\"editors\\\":\\\"0010\\\",\\\"html\\\":\\\"<div id=\\\\\\\"root\\\\\\\"></div>\\\",\\\"js\\\":\\\"class ScrollingList extends React.Component {\\\\n  listRef = null;\\\\n  previousScrollOffset = null;\\\\n\\\\n  // highlight-range{1-8}\\\\n  componentWillUpdate(nextProps, nextState) {\\\\n    // Are we adding new items to the list?\\\\n    // Capture the scroll position so we can adjust scroll later.\\\\n    if (this.props.list.length < nextProps.list.length) {\\\\n      this.previousScrollOffset =\\\\n        this.listRef.scrollHeight - this.listRef.scrollTop;\\\\n    }\\\\n  }\\\\n\\\\n  // highlight-range{1-10}\\\\n  componentDidUpdate(prevProps, prevState) {\\\\n    // If previousScrollOffset is set, we've just added new items.\\\\n    // Adjust scroll so these new items don't push the old ones out of view.\\\\n    if (this.previousScrollOffset !== null) {\\\\n      this.listRef.scrollTop =\\\\n        this.listRef.scrollHeight -\\\\n        this.previousScrollOffset;\\\\n      this.previousScrollOffset = null;\\\\n    }\\\\n  }\\\\n\\\\n  render() {\\\\n    return (\\\\n      <div ref={this.setListRef}>\\\\n        {/* ...contents... */}\\\\n      </div>\\\\n    );\\\\n  }\\\\n\\\\n  setListRef = ref => {\\\\n    this.listRef = ref;\\\\n  };\\\\n}\\\\n\\\",\\\"js_external\\\":\\\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\\\",\\\"js_pre_processor\\\":\\\"babel\\\",\\\"layout\\\":\\\"left\\\"}\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---redirect-to-codepen-update-on-async-rendering-react-dom-properties-before-update-before-bcafb24f0555a378b2a6.js","module.exports = {\"pathContext\":{\"action\":\"https://codepen.io/pen/define\",\"payload\":\"{\\\"editors\\\":\\\"0010\\\",\\\"html\\\":\\\"<div id=\\\\\\\"root\\\\\\\"></div>\\\",\\\"js\\\":\\\"class ScrollingList extends React.Component {\\\\n  listRef = null;\\\\n  previousScrollOffset = null;\\\\n\\\\n  // highlight-range{1-8}\\\\n  componentWillUpdate(nextProps, nextState) {\\\\n    // Are we adding new items to the list?\\\\n    // Capture the scroll position so we can adjust scroll later.\\\\n    if (this.props.list.length < nextProps.list.length) {\\\\n      this.previousScrollOffset =\\\\n        this.listRef.scrollHeight - this.listRef.scrollTop;\\\\n    }\\\\n  }\\\\n\\\\n  // highlight-range{1-10}\\\\n  componentDidUpdate(prevProps, prevState) {\\\\n    // If previousScrollOffset is set, we've just added new items.\\\\n    // Adjust scroll so these new items don't push the old ones out of view.\\\\n    if (this.previousScrollOffset !== null) {\\\\n      this.listRef.scrollTop =\\\\n        this.listRef.scrollHeight -\\\\n        this.previousScrollOffset;\\\\n      this.previousScrollOffset = null;\\\\n    }\\\\n  }\\\\n\\\\n  render() {\\\\n    return (\\\\n      <div ref={this.setListRef}>\\\\n        {/* ...contents... */}\\\\n      </div>\\\\n    );\\\\n  }\\\\n\\\\n  setListRef = ref => {\\\\n    this.listRef = ref;\\\\n  };\\\\n}\\\\n\\\",\\\"js_external\\\":\\\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\\\",\\\"js_pre_processor\\\":\\\"babel\\\",\\\"layout\\\":\\\"left\\\"}\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/redirect-to-codepen-update-on-async-rendering-react-dom-properties-before-update-before.json\n// module id = 988\n// module chunks = 129902151644389"],"sourceRoot":""}